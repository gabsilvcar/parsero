PROGRAM -> STATEMENT {}
PROGRAM -> & {}

TYPE -> int {}
TYPE -> float {}
TYPE -> string {}

STATEMENT -> break semicolon {break_self_inh}
STATEMENT -> VARDECL semicolon {}
STATEMENT -> open_curly_bracket STATELIST close_curly_bracket {}
STATEMENT -> ATRIBSTAT {}
STATEMENT -> IF_STMT {}
STATEMENT -> WHILESTAT {}

IF_STMT -> if open_bracket EXPRESSION close_bracket SIMPLEIF IF_STMT0 {if_simpleif_code, if_self_code}
IF_STMT0 -> & | else IF_STMT1
IF_STMT1 -> STATEMENT {}
IF_SIMPLE -> if open_bracket EXPRESSION close_bracket SIMPLEIF {}
SIMPLEIF -> open_curly_bracket STATELIST close_curly_bracket {}

WHILESTAT ->  while open_bracket EXPRESSION close_bracket STATEMENT {while_statement_code,while_self_code}


VARDECL -> TYPE id VARDECL1 {}
VARDECL1 -> open_square_bracket int_constant close_square_bracket VARDECL1 {}
VARDECL1 -> & {}

STATELIST -> STATEMENT STATELISTAUX {}
STATELISTAUX -> STATELIST {}
STATELISTAUX -> & {}

PROGRAM -> STATEMENT {}
PROGRAM -> & {}

TYPE -> int {}
TYPE -> float {}
TYPE -> string {}

STATELIST -> STATEMENT STATELISTAUX {}
STATELISTAUX -> STATELIST {}
STATELISTAUX -> & {}

SIGN -> plus | minus
OPERATOR ->  mult | div | mod | comparator

UNARYEXPR -> FACTOR {unarycode_self_code}

FACTOR -> int_constant {factorint_self_code}
FACTOR -> float_constant {factorfloat_self_code}
FACTOR -> string_constant {factorstring_self_code}
FACTOR -> null {factornull_self_code}
FACTOR -> open_bracket NUMEXPRESSION close_bracket {actorparenthesis_self_code}
FACTOR -> LVALUE {factorlvalue_self_code}

TERM -> UNARYEXPR TERMAUX {makecode_self_syncode, makecode_termaux_inhcode}
TERMAUX -> OPERATOR UNARYEXPR TERMAUX {termauxcode_termaux_inhcode, termauxcode_self_syncode }
TERMAUX -> & {}
TERMAUX -> TERMAUX1 {codeheritage_self_syn, codeheritage_termaux1_code}
TERMAUX1 -> SIGN UNARYEXPR TERMAUX1 {termauxcode_termaux1_inhcode, termauxcode_self_syncode}
TERMAUX1 -> & {termauxepsilon_self_syncode}

ATRIBSTAT -> LVALUE equal ATRIBSTATAUX semicolon {atribcode_self_code, idheritage_self_id}
ATRIBSTATAUX -> EXPRESSION {codeheritage_self_syncode}

EXPRESSION -> NUMEXPRESSION  {codeheritage_self_syncode}

NUMEXPRESSION -> TERM NUMEXPRESSION_AUX {codeheritage_self_syncode}
NUMEXPRESSION_AUX -> &


# NUMEXPRESSION_AUX -> OPERATOR TERM NUMEXPRESSION_AUX Ambiguous

LVALUE -> id LVALUE_AUX {getid_self_id}
LVALUE_AUX -> open_square_bracket NUMEXPRESSION close_square_bracket LVALUE_AUX
LVALUE_AUX -> &